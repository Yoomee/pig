.unsaved-changes
:javascript
  $(document).ready(function() {
    Pig.Redactor.init();
    $( ".autocomplete-select" ).combobox();
    SirTrevor.setDefaults({
      uploadUrl: $('#cms-style-container').data('sirTrevorUploadUrl')
    });
    $('.st-content').each(function() {
        new SirTrevor.Editor({
          el: $(this),
          blockTypes: $(this).data('blocktypes'),
          blockTypeLimits: $(this).data('blocktypelimits'),
          required: $(this).data('required')
        });
    });

    $('html, body').animate({ scrollTop: $('h1').position().top }, 0, "linear");

    $("#content_package_author_id").on("change", function(){
      role = $("option:selected", this).data("role");
      if (role === "author") {
        $("#content_package_status").val("draft")
      }
    });
    $("input[data-form-action]").on("click", function(e) {
      e.preventDefault();
      $submit_button =$(e.currentTarget);
      $form = $($submit_button.parents("form"));
      $form.attr('action', $submit_button.data("form-action"));
      $form.submit();
    });

    $("#content_package_parent_id").combobox();
    $(".custom-combobox-input").attr('placeholder', 'Start typing to search');
  });

=semantic_form_for [pig, :admin, @content_package], html: { onsubmit: 'setFormSubmitting()' } do |form|
  .container.page-margin-bottom{data: {sir_trevor_upload_url: pig.upload_sir_trevor_attachment_admin_content_package_path(@content_package)} }
    .row
      .col-xs-12
        .cms-page-header
          %h1=title @content_package
    .row
      .col-md-8
        -if @content_package.notes.present?
          .cms-well
            %label.col-primary Content objective/goal
            %p.mb-0=@content_package.notes
        %ul.cms-tabs
          %li.active
            =link_to('#content', 'data-toggle' => 'tab') do
              %i.fa.fa-paragraph
              %span Content
          %li
            =link_to('#meta', 'data-toggle' => 'tab') do
              %i.fa.fa-tag
              %span Meta
          -if Pig::configuration.tags_feature
            %li
              =link_to('#tags', 'data-toggle' => 'tab') do
                %i.fa.fa-tags
                %span Tags
          -if can? :manage_settings, @content_package
            %li
              =link_to('#settings', 'data-toggle' => 'tab') do
                %i.fa.fa-cog
                %span Settings
        #content.tab-pane.active
          =render 'content_attributes', form: form
        #meta.tab-pane
          =render 'meta_inputs', form: form
        -if Pig::configuration.tags_feature
          #tags.tab-pane
            .cms-form-well
              .row
                .col-xs-12
                  =form.inputs do
                    -@content_package.tag_categories.each do |category|
                      %button.collapse-trigger{"aria-expanded" => "false", "data-target" => "##{(category.name).parameterize}-collapse", "data-toggle" => "collapse", :type => "button"}
                        =category.name
                        -if category.taxonomy_list.present?
                          %i.fa.fa-caret-down.pull-right
                      %div{:id => ("#{(category.name).parameterize}-collapse"), :class => 'collapse'}
                        %ul.list-half
                          -category.taxonomy_list.each do |tag|
                            %li
                              .checkbox.m0
                                %label.m0
                                  =hidden_field_tag "content_package[taxonomy_tags][#{category.slug}][]", ''
                                  =check_box_tag "content_package[taxonomy_tags][#{category.slug}][]", tag, @content_package.taxonomy_from(category).include?(tag)
                                  =tag
                          .clearfix
        -if can? :manage_settings, @content_package
          #settings.tab-pane
            .cms-form-well
              =form.inputs do
                =form.input :content_type_id, :as => :hidden
                =form.input :name
                =form.input :notes, :label => 'Content objective/goal', :input_html => {:rows => 4}
                .form-group#content_package_personas
                  %h4.col-primary Personas
                  %hr
                  -@persona_groups.each_slice(2) do |groups|
                    .row
                      -groups.each do |group|
                        .col-md-6
                          %h5.mb-1=group
                          =form.input :personas, :as => :check_boxes, :collection => group.personas, :label => false, :member_label => :to_s
                .clearfix
                =form.input :requested_by, :collection => Pig::User.where(:role => 'admin').order('lower(last_name)')
                =form.input :due_date, :order => [:day, :month, :year], :include_blank => false, :start_year => Date.today.year
                .form-group
                  %h4.col-primary Review frequency
                  .check_boxes
                    =form.input :review_frequency, :as => :radio, :collection => Pig::ContentPackage.review_frequencies.invert, :label => false
              .form-group
                %h4.col-primary Page settings
                %hr
                =form.inputs do
                  =form.input :parent_id, as: :select, collection: nested_set_options(Pig::ContentPackage, @content_package) {|i| "#{'-' * i.level} #{i.name}" }
                  -if can? :manage_slug, @content_package
                    =form.input :slug
                  =form.input :logged_in_only, :as => :content_boolean, :label => "Only logged in users can view this"
                  =form.input :hide_from_robots, :as => :content_boolean, :label => "Exclude from search engine indexing"

        .cms-sidebar-actions
          -if current_user.role == "author"
            =form.action :submit, :label => "Save and continue editing", :button_html => {:class => "btn btn-success pull-right", data: { form_action: pig.admin_content_package_path(@content_package) } }
            =form.action :submit, :label => "Mark as ready to review", :button_html => {:class => "btn pull-right", data: { form_action: pig.ready_to_review_admin_content_package_path(@content_package) } }
          -else
            =form.action :submit, label: 'Save and view', button_html: { class: 'btn btn-success pull-right', data: { form_action: pig.admin_content_package_path(@content_package, view: true) } }
            =form.action :submit, label: 'Save and continue editing', button_html: { class: 'btn btn-success pull-right', data: { form_action: pig.admin_content_package_path(@content_package) } }
          .clearfix

      .col-md-4
        .cms-sidebar
          -if current_user.role != "author"
            .cms-edit-status.cms-well
              %div
                %label{for: "content_package_author_id"} Assigned To
                =form.input :author_id, :as => :select, :collection => Pig::User.where("role<>''").order(:last_name).map { |u| ["#{u.full_name} (#{u.role})", u.id, {:'data-role' => u.role }] }, :include_blank => true, :label => false
                %label{for: "content_package_status"} Status
                =form.input :status, :as => :select, :collection => Pig::ContentPackage.statuses(current_user).invert, :include_blank => false, :label => false
                #content_package_publish_at_fields{:class => content_package_publish_at_class}
                  %label{for: "content_package_publish_at"} Publish at (optional)
                  =form.input :publish_at, :as => :datepicker, :label => false
                  .help-block{:class => @content_package.publish_at.present? ? '' : 'hidden'}
                    %p Page will be published but not shown to the public until this date.
          .clearfix
          %ul.cms-tabs
            %li.active=link_to("Context", '#context', 'data-toggle' => 'pill')
            %li=link_to("Activity", '#activity', 'data-toggle' => 'pill')
            %li=link_to("Personas", '#personas', 'data-toggle' => 'pill')
            -# %li=link_to("Discussion", '#discussion', 'data-toggle' => 'pill')
            -# %li=link_to("Scorecard", '#content-scorecard', 'data-toggle' => 'pill')
          .tab-content
            #activity.tab-pane.cms-well
              %ul.cms-activities.cms-activity-feed
                =render(partial: 'activity', collection: @activity_items, as: :activity, locals: {:include_name => true})
                / -@activity_items.each do |activity|
                /   =render("pig/content_packages/activity", :include_name => true, :activity => activity)
              -if @activity_items.total_pages != @activity_items.current_page
                =link_to "See older activity", pig.activity_admin_content_package_path(@content_package), :remote => true, :class => 'btn btn-sm js-older-activities pull-right'
                .clearfix
            - if @content_package.personas.present?
              #personas.tab-pane.cms-well
                %label.col-primary Audience/personas
                -@content_package.personas.each do |persona|
                  -cache(persona) do
                    .cms-persona-box
                      .row
                        .col-sm-4
                          =image_for(persona, '120x120#')
                        .col-sm-8
                          %h4=persona
                          %p.small-text="Age #{persona.age}"
                          .btn.btn-xs.more-persona Read more
                      .persona-summary
                        %p
                          %em=persona.summary
                        -if persona.benefits.present?
                          %p
                            %strong="Goals for #{persona.name}"
                          %ul
                            -persona.benefits.each do |benefit|
                              %li=benefit
                        -if persona.file
                          =link_to("Download full persona", persona.file.url, :target => '_blank', :class => 'btn btn-sm', :icon => 'download')
            #context.tab-pane.active.cms-well
              %label.col-primary Content Package Id
              %p
                =@content_package.id
              %label.col-primary Template
              %p
                =link_to(@content_package.content_type, pig.edit_admin_content_type_path(@content_package.content_type))
              %label.col-primary Content requested by
              %p
                =@content_package.requested_by.try(:full_name)
          - if ga_code?
            %ul.cms-tabs
              %li.active=link_to("Analytics", '#analytics', 'data-toggle' => 'pill')
            .tab-content
              #analytics.tab-pane.active.cms-well
                = react_component('ContentPackageAnalytics', analyticsPath: pig.analytics_admin_content_package_path(@content_package))
